<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.uvfortune.infrastructure.repository.mapper.sysmapper.SysRoleUserMapper" >
  <resultMap id="BaseResultMap" type="com.cn.uvfortune.infrastructure.repository.entity.SysRoleUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="Sys_User_id" property="sysUserId" jdbcType="INTEGER" />
    <result column="Sys_Role_id" property="sysRoleId" jdbcType="INTEGER" />
    <result column="agencyId" property="agencyId" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="userMap" type="com.cn.uvfortune.infrastructure.repository.entity.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="usernumber" property="usernumber" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="cardid" property="cardid" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="descption" property="descption" jdbcType="VARCHAR" />
    <collection property="roles" ofType="com.cn.uvfortune.infrastructure.repository.entity.SysRole">
      <result column="name" property="rolename"/>
    </collection>
  </resultMap>

  <sql id="Base_Column_List" >
    id, Sys_User_id, Sys_Role_id, agencyId
  </sql>

  <select id="findByUserName" parameterType="String" resultMap="userMap">
        select u.*
        ,r.name
        from sys_user u
        LEFT JOIN sys_role_user sru on u.id= sru.Sys_User_id
        LEFT JOIN sys_role r on sru.Sys_Role_id=r.id
        where username= #{username}
   </select>

  <!--根据用户id查询该用户下的将角色信息-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role_user
    where Sys_User_id = #{id,jdbcType=INTEGER}
  </select>
  <!--根据组织id查询该组织下的角色信息-->
  <select id="selectByAgencyId"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role_user
    where agencyId = #{agencyId,jdbcType=INTEGER}
  </select>
  <!--批量添加角色信息-->
  <insert id="insertBatch">
    INSERT INTO sys_role_user
    (Sys_User_id, Sys_Role_id,agencyId)
    VALUES
    <foreach collection ="list" item="SysRoleUser" separator =",">
      (#{SysRoleUser.sysUserId}, #{SysRoleUser.sysRoleId},#{SysRoleUser.agencyId})
    </foreach >
  </insert>
  <!--根据用户ID删除该用户下的角色信息-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role_user
    where Sys_User_id = #{id,jdbcType=INTEGER}
  </delete>
  <!--根据组织id删除该组织对应的角色信息-->
  <delete id="deleteByAgencyId" parameterType="java.lang.Integer" >
    delete from sys_role_user
    where agencyId = #{agencyId,jdbcType=INTEGER}
  </delete>

  <!--查询用户拥有的角色-->
  <select id="queryRoleByAid" resultType="com.cn.uvfortune.domain.model.security.RoleUser" parameterType="java.lang.Integer" >
    select
    ur.Sys_Role_id
    from sys_role_user ur
    where ur.agencyId = #{agencyId,jdbcType=INTEGER}
  </select>

</mapper>