<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.uvfortune.infrastructure.repository.mapper.sysmapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.cn.uvfortune.infrastructure.repository.entity.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="usernumber" property="usernumber" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="cardid" property="cardid" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="descption" property="descption" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, realname, usernumber, sex, cardid, phone, email, status, 
    image, adress, descption
  </sql>

  <!-- 通过用户名返回用户列表 -->
  <!-- 记住：在获取List列表的时候，resultMap="resultUserList"千万别写成resultType="resultUserList"，否则报错 -->

  <select id="getAllUser" resultType="com.cn.uvfortune.infrastructure.repository.entity.SysUser">
    select
    <include refid="Base_Column_List" />
    from sys_user
    <where>
      <if test="sKey != null and sKey != ''">
        and username like CONCAT('%', #{sKey}, '%')
      </if>
      <if test="sex != null and sex != ''">
        and sex = #{sex}
      </if>
      <if test="status != null and status != ''">
        and status = #{status}
      </if>
      <if test="usernumber != null and usernumber != ''">
        and usernumber = #{usernumber}
      </if>
    </where>
  </select>

  <select id="getAllUserList" resultType="com.cn.uvfortune.infrastructure.repository.entity.SysUser" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from sys_user where id not in (select sys_user_id from sys_user_agency where sys_agency_id = #{sysAgencyId,jdbcType=INTEGER})
      and id not in (select sys_user_id from sys_user_agency where sys_agency_id not in(select id from sys_org_agency where org_id=(select org_id from sys_org_agency where id=#{sysAgencyId,jdbcType=INTEGER})) )
  </select>

  <!-- 通过用户id查询用户 -->

  <select id="getPersonById" resultType="com.cn.uvfortune.domain.model.org.OrgUser" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--删除用户信息-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!--添加用户信息-->
  <insert id="insert" parameterType="com.cn.uvfortune.infrastructure.repository.entity.SysUser" >
    insert into sys_user (username,password,
      realname, usernumber, sex, 
      cardid, phone, email, 
      status, image, adress, 
      descption)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{realname,jdbcType=VARCHAR}, #{usernumber,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{cardid,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{image,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR}, 
      #{descption,jdbcType=VARCHAR})
  </insert>
  <!--修改用户信息-->
  <update id="updateByPrimaryKey" parameterType="com.cn.uvfortune.infrastructure.repository.entity.SysUser" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      usernumber = #{usernumber,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      cardid = #{cardid,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      image = #{image,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR},
      descption = #{descption,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 批量删除 -->
  <delete id="deleteBatch" parameterType="int">
    delete from sys_user where id in
    <foreach item="id" collection="list" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  <!--查询用户拥有的角色-->
  <select id="queryRoleByUserId" resultType="com.cn.uvfortune.domain.model.security.RoleUser" parameterType="java.lang.Integer" >
    select
    ur.Sys_Role_id
    from sys_role_user ur
    where ur.Sys_User_id = #{userid,jdbcType=INTEGER}
  </select>

   <!-- 根据用户名查询用户信息-->
  <select id="queryUser" resultType="com.cn.uvfortune.infrastructure.repository.entity.SysUser" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from sys_user
    where username = #{username,jdbcType=VARCHAR}
  </select>
  <!--重置密码-->
  <update id="upPass" parameterType="com.cn.uvfortune.infrastructure.repository.entity.SysUser" >
    update sys_user
     set password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--查询联系人-->
  <select id="contactList" resultType="java.util.Map">
    select id, realname, phone from sys_user where 1=1
  </select>
</mapper>